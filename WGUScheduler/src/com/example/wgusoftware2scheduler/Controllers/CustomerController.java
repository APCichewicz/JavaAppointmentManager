package com.example.wgusoftware2scheduler.Controllers;

import com.example.wgusoftware2scheduler.Models.Country;
import com.example.wgusoftware2scheduler.Models.Customer;
import com.example.wgusoftware2scheduler.Models.DataSet;
import com.example.wgusoftware2scheduler.Models.Division;
import com.example.wgusoftware2scheduler.Utility.JDBC;
import com.example.wgusoftware2scheduler.Utility.Popups;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;
import java.util.stream.Collectors;
/**

 CustomerController is a class that implements the CanPass interface and handles the functionality for the customer screen of the application.

 It allows users to add, update, or delete customers and validates their input.
 */
public class CustomerController implements CanPass {
    public TextField IdField;
    public TextField NameField;
    public TextField AddressField;
    public TextField PhoneNumber;
    public ComboBox CountryBox;
    public ComboBox StateProvinceBox;
    public TextField PostalField;
    public Label CustomerHeadding;
    public Button SubmitButton;
    public Button CancelButton;
    private Customer customer;



    @Override
    public void passData(Object data) {
        customer = (Customer) data;
        IdField.setText(Integer.toString(customer.getID()));
        NameField.setText(customer.getName());
        AddressField.setText(customer.getAddress());
        PhoneNumber.setText(customer.getPhone());
        CountryBox.setValue(DataSet.getCountries().stream().filter(c -> c.getID() == customer.getDivision().getCountryID()).findFirst().get().getName());
        StateProvinceBox.setValue(customer.getDivision().getName());
        CustomerHeadding.setText("Edit Customer");
        PostalField.setText(customer.getPostalCode());
        newCountrySelected();
    }
    /**

     Initializes the customer screen by setting up the appropriate fields and combo boxes based on the provided customer data.
     */
    public void initialize() {
        IdField.setText("Autogenerated upon submission");
        DataSet.getCountries().stream().forEach(country -> CountryBox.getItems().add(country.getName()));

        CountryBox.setValue(DataSet.getCountries().get(0).getName());


        DataSet.getDivisions().stream()
                .filter(division -> division.getCountryID() == DataSet.getCountries().get(0).getID())
                .forEach(division -> StateProvinceBox.getItems().add(division.getName()));
        if (customer != null) {

            IdField.setText(String.valueOf(customer.getID()));
            NameField.setText(customer.getName());
            AddressField.setText(customer.getAddress());
            PhoneNumber.setText(customer.getPhone());
            CountryBox.setValue(DataSet.getCountries().stream()
                    .filter(country -> country.getID() == customer.getDivision().getCountryID()).findFirst().get()
                    .getName());
            StateProvinceBox.setValue(customer.getDivision());
            PostalField.setText(customer.getPostalCode());
            CustomerHeadding.setText("Edit Customer");
        }
    }
    /**

     Updates the divisions combo box when a new country is selected.
     */
    @FXML
    private void newCountrySelected() {
        Country cntry = DataSet.getCountries().stream().filter(c -> c.getName().equals(CountryBox.getValue().toString())).findFirst().get();
        ObservableList<String> divs = FXCollections.observableArrayList(DataSet.getDivisions().stream().filter(d -> d.getCountryID() == cntry.getID()).map(Division::getName).collect(Collectors.toList()));
        StateProvinceBox.setItems(divs);
    }
    /**

     Handles the cancel button action by returning to the main view.
     */
    @FXML
    private void onCancelButtonClicked() {
        try {
            Stage stage = (Stage) SubmitButton.getScene().getWindow();
            Parent root = FXMLLoader.load(getClass().getResource("/com/example/wgusoftware2scheduler/resources/MainView.fxml"));
            stage.setScene(new Scene(root));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    /**

     Handles the submit button action by validating the customer input and adding, updating, or deleting the customer from the database.
     Returns to the main view after processing the input.
     */
    @FXML
    private void onSubmitButtonClicked() {
        if (NameField.getText().isEmpty() || AddressField.getText().isEmpty() || PhoneNumber.getText().isEmpty() || CountryBox.getValue() == null || StateProvinceBox.getValue() == null || PostalField.getText().isEmpty()) {
            Popups.error("Error","Please fill out all the fields");
            return;
        }
        try {
            Customer.isCustomerValid(
                    NameField.getText(),
                    AddressField.getText(),
                    PhoneNumber.getText(),
                    StateProvinceBox.getValue().toString(),
                    PostalField.getText());
        } catch (IllegalArgumentException e) {
            Popups.error("Error",e.getMessage());
            return;
        }
        if (customer == null) {

            JDBC.addCustomer(
                    NameField.getText(),
                    AddressField.getText(),
                    PostalField.getText(),
                    PhoneNumber.getText(),
                    DataSet.getDivisions().stream().filter(d -> d.getName() == StateProvinceBox.getValue().toString()).map(Division::getID).findFirst().get());
        } else {
            customer.setName(NameField.getText());
            customer.setAddress(AddressField.getText());
            customer.setPhone(PhoneNumber.getText());
            customer.setDivision(DataSet.getDivisions().stream().filter(d -> d.getName().equals(StateProvinceBox.getValue())).findFirst().get());
            customer.setPostalCode(PostalField.getText());
            JDBC.updateCustomer(customer);

        }
        try {
            Stage stage = (Stage) SubmitButton.getScene().getWindow();
            Parent root = FXMLLoader.load(getClass().getResource("/com/example/wgusoftware2scheduler/resources/MainView.fxml"));
            stage.setScene(new Scene(root));
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
